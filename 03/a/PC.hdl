// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    // Get the flags and check in back order to be sure that if priority flag is 1 so this will be the last result.
    // 1.get the regOut --> 2. check about the inc and change if needed --> 3. check load and change if needed --> 4. check reset and change
    // the condition not defend on the bits (onlt the inc is change this) and its work because of this.
    Register(in=resetMuxRes, load= true, out=out, out = regOut);

    Inc16(in=regOut, out=resInc);

    Mux16(a=loadMuxRes, b[0..15] = false, sel = reset, out = resetMuxRes);
    Mux16(a=incMuxRes, b= in, sel = load, out = loadMuxRes);
    Mux16(a=regOut, b=resInc, sel=inc, out= incMuxRes);

    
    
    
}
